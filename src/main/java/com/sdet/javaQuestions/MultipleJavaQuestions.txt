Q- What is a constructor? Can we override a constructor?

contructor is method in class which has same name as class which be class when object is created.
Key Features of a Constructor:
‚úÖ The constructor name must match the class name.
‚úÖ It does not have a return type (not even void).
‚úÖ It is automatically called when an object is created.
‚úÖ If no constructor is defined, Java provides a default constructor.

No we can't override constructor , override required inheritance but constructor can't be inherited ,
                               instead of overriding constructor we can use constrictor overloading.
Types of constructor
1. Default constructor - if there is no constructor java will create default constructor
2. Parameterized Constructor :allows object initialization with custom values
3. Copy Constructor :copies values from one object to another.


Q 2: How to achieve multiple abstraction in Java?

     1. Using multiple Interface:




     2. Using Abstract class and Interface


Q 3. What is the static keyword in Java?

    Static keyword is used to define class-level member(variable ,method ,blocks and nested class )
    that belong to class itself rather than individual instance if the class .
    This Means static member can be used without creating object.


   Static Variable - Shared across all instance of the class.

       class counter {
                static count =0;

                counter (){
                     count++;
                     }
        }

       class main {
            Counter c1 = new Counter();
            Counter c2 = new Counter();
            System.out.println(Counter.count);

  }

   Static Method : belongs to the class
    A static method belongs to the class itself, not to any object of the class.
    It can be called without creating an object.
    It can access only static variables or other static methods directly.

 class counter {

    public static mycounter(){
    System.out.println("My CLass");
    }
}
 class main {

    System.out.println(Counter.mycounter()); -o/p Myclass  //(no object needed)
 }

 Static Block - Executed once when class is loaded into memory.

      class Database {
      static String driver;

        static {
        driver ="com.mysql.jdbc.driver";
        System.out.println("Database driver loaded: " + driver);
        }
      }
      public class Main {
          public static void main(String[] args) {
              // Output when class is first referenced:
              // "Database driver loaded: com.mysql.jdbc.Driver"
          }
      }

 Nested Class : Doesn't require any instance of outer class
        Class obj1 {
             static String name = "MIT"; // Static variable

             static class obj2 {
                  void display() {
                   System.out.println("University: " + name); // Access static variable
                     }

             }
        }
        public class main (){
            psvm (String[] args){
            obj1.obj2 ob = new obj1.obj2();
            ob.display(); //University: " MIT
             }
        }

 4. Explain JVM & GC :
      https://www.youtube.com/watch?v=vz6vSZRuS2M

 5. Difference between constructor overloading and method overloading?
        Constructor Overloading is used when you need different ways to initialize objects. For example,
        creating an object with default values or values passed from the constructor.

        Method Overloading is used when you want to perform the same action (like addition, multiplication) on different types or numbers of inputs. It improves the flexibility of your code.

 6. What is exception?

 7. serilization vs deseriilzation in java?
        Serialization is the process of converting a Java object into a byte stream so that it can be:

                Saved to a file

                Sent over a network

                Stored in a database

            üî∏ This byte stream can later be deserialized to recreate the original object.

              ‚ûï Use Cases:
                   Saving the state of an object (persistence)

                    Sending objects over a network (e.g., in RMI, socket programming)

                    Caching and deep cloning

             üõ†Ô∏è Syntax:
                To serialize an object:

                 The class must implement the Serializable interface.

                 Use ObjectOutputStream.
      Deserialization is the process of reconstructing a Java object from a byte stream.



8. Difference between String and StringBuffer.
    Feature | String | StringBuffer
    Mutability | Immutable | Mutable
    Meaning | Once created, it cannot be changed | You can modify the content directly
    Example | str.concat("Java") returns a new object | sb.append("Java") modifies the same object


13. Explain the collections framework hierarchy.
14. Difference between Hashtable and HashSet.
15. Difference between Comparable and Comparator.
17. Write a program to create a custom exception.
20. Difference between final, finally, and finalize.
19. Why is an abstract class allowed to have a constructor?
24. What are Java Streams and Lambda Expressions?
27. What is a functional interface?
6) What are commonly used interfaces in Selenium
 8 How is memeory allocated in String literal and New String class object
 9 How string is immutable?


 ‚úÖ Why Use a private Constructor?
 Ans : A private constructor prevents the creation of objects from outside the class.


.  Selenium Question :
   RestAssured


   JerseyClient
   Code Review Prinicpal -Kiss.SOLID
   HttpMethod-
   File Excel
   Maven


